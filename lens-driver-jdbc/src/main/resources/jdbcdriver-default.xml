<?xml version="1.0"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>
  <property>
    <name>lens.driver.jdbc.connection.provider</name>
    <value></value>
    <description>A contract for obtaining JDBC connections</description>
  </property>

  <property>
    <name>lens.driver.jdbc.query.rewriter</name>
    <value>org.apache.lens.driver.jdbc.ColumnarSQLRewriter</value>
    <description>Rewriting the HQL to optimized sql queries</description>
  </property>

  <property>
    <name>lens.driver.jdbc.driver.class</name>
    <value>com.mysql.jdbc.Driver</value>
    <description>Type of JDBC driver used to connect backend database</description>
  </property>

  <property>
    <name>lens.driver.jdbc.db.uri</name>
    <value></value>
    <description>JDBC connection URL in the format jdbc:dbms://host:port/dbname</description>
  </property>

  <property>
    <name>lens.driver.jdbc.db.user</name>
    <value></value>
    <description>The database user on whose behalf the connection is being made</description>
  </property>

  <property>
    <name>lens.driver.jdbc.db.password</name>
    <value></value>
    <description>The database user's password</description>
  </property>

  <property>
    <name>lens.driver.jdbc.pool.max.size</name>
    <value>15</value>
    <description>Maximum number of concurrent connections allowed in pool</description>
  </property>

  <property>
    <name>lens.driver.jdbc.pool.idle.time</name>
    <value>600</value>
    <description>Maximum idle time in sec before a connection is closed</description>
  </property>

  <property>
    <name>lens.driver.jdbc.pool.max.statements</name>
    <value>20</value>
    <description>Maximum number of prepared statements to cache per connection</description>
  </property>

  <property>
    <name>lens.driver.jdbc.get.connection.timeout</name>
    <value>10000</value>
    <description>Response timeout in milliseconds of any JDBC call invoking data transmission over a connection socket
    </description>
  </property>

  <property>
    <name>lens.driver.jdbc.explain.keyword</name>
    <value>Explain</value>
    <description>Explain keyword used to get the query plan of underlying database</description>
  </property>

  <!-- query params -->

  <property>
    <name>lens.cube.query.driver.supported.storages</name>
    <value></value>
    <description>List of comma separated storage names that supported by a driver. If no value is specified, all
      storages are valid
    </description>
  </property>

  <property>
    <name>lens.cube.query.enable.multi.table.select</name>
    <value>false</value>
    <description>Tells whether multiple tables are allowed in from clause of final HQL query</description>
  </property>

  <property>
    <name>lens.cube.query.replace.timedim</name>
    <value>false</value>
    <description>Tells whether timedim attribute queried in the time range should be replaced with its corresponding
      partition column name.
    </description>
  </property>

  <property>
    <name>lens.cube.query.time.range.writer.class</name>
    <value>org.apache.lens.cube.parse.BetweenTimeRangeWriter</value>
    <description>The timerange writer class which specifies how the resolved partitions in timeranges should be written
      in final query. Available writers are org.apache.lens.cube.parse.ORTimeRangeWriter and
      org.apache.lens.cube.parse.BetweenTimeRangeWriter
    </description>
  </property>

  <property>
    <name>lens.cube.query.partition.where.clause.format</name>
    <value>yyyy-MM-dd HH:mm:ss</value>
    <description>The simple date format of how the queried partition should be put in where clause. If nothing is
      specified, it will use the format from org.apache.lens.cube.metadata.UpdatePeriod for each type of partition
    </description>
  </property>

  <property>
    <name>lens.driver.jdbc.enable.resultset.streaming.retrieval</name>
    <value>false</value>
    <description>Flag to enable row by row retrieval of result set from the database server. This is used to enable
      streaming result sets for MySQL. This is set to false by default.
    </description>
  </property>

  <property>
    <name>lens.driver.jdbc.fetch.size</name>
    <value>1000</value>
    <description>Fetch size for JDBC result set</description>
  </property>

</configuration>
